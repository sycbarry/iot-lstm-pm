version: '3.8'

services:
  simulator:
    build:
      context: ./simulator
      dockerfile: Dockerfile
    container_name: simulator
    depends_on:
      model:
        condition: service_healthy  
    environment:
      ENDPOINT: "http://model:5001/predict"
      HEALTHENDPOINT: "http://model:5001/health"
    networks:
      - maintenance-net

  model:
    build:
      context: ./model
      dockerfile: Dockerfile
    container_name: model
    ports:
      - "5001:5001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5001/health"]
      interval: 10s
      timeout: 10s
      retries: 10
      start_period: 10s
    environment:
      USINGQUEUE: True
      QUEUEHOST: "rabbitmq"
    networks:
      - maintenance-net

  ui: 
    build: 
      context: ./ui
      dockerfile: Dockerfile
    container_name: ui
    ports: 
      - "3000:3000"
    networks:
      - maintenance-net


  consumerapi:
    build:
      context: ./consumer-api
      dockerfile: Dockerfile
    container_name: consumerapi
    ports:
      - "5002:5002"
    environment:
      QUEUEHOST: "rabbitmq"
    networks:
      - maintenance-net


  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672"       # AMQP
      - "15672:15672"     # Management UI
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    networks: 
      - maintenance-net

networks:
  maintenance-net:
    driver: bridge

